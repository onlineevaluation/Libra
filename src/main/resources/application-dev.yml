spring:
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/eva?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: root
    password: 1234
    type: com.alibaba.druid.pool.DruidDataSource

    initialSize: 10   #初始化连接个数
    minIdle: 10       #最小空闲连接个数
    maxActive: 500    #最大连接个数
    maxWait: 60000    #获取连接时最大等待时间，单位毫秒。
    timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    minEvictableIdleTimeMillis: 30000     #配置一个连接在池中最小生存的时间，单位是毫秒
    validationQuery: select 1 #用来检测连接是否有效的sql，要求是一个查询语句。
    testWhileIdle: true       #建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    poolPreparedStatements: false #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    filters: stat,wall #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    useGlobalDataSourceStat: false # 合并多个DruidDataSource的监控数据
    test-on-borrow: true
    test-while-idle: true
  #  spring.datasource.filters=stat,wall,log4j


  jpa:
    database: mysql
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: update
  main:
    allow-bean-definition-overriding: true
  aop:
    auto: true
    proxy-target-class: true


server:
  port: 8081

jwt:
  token:
    secret: nuc_software
    #一周的有效
    expire: 604800000

management:
  security:
    enable: ture

sentry:
  dsn: https://afe0d8b88e904639a7df88e5ae95d856:dbecbf917f444365af516311561e8eb3@sentry.io/288602